#include <stdio.h>

int fun(int x)
{
    int p;
    if (x == 0 || x == 1)
        return (3);
    p = x - fun(x - 2);
    return p;
}
int main()
{
    printf("%d\n", fun(7));
}

// 7-f5 -> 2+f3 -> 2+3-f1(f1=3) -> 2


#include <stdio.h>
void get_put()
{
    char ch;
    ch = getchar(); 
    if (ch != '\n')
        get_put();  //递归逆序
    putchar(ch);
}
int main()
{
    get_put();
    printf("\n");
}

// 1234  ->  4321



#include <stdio.h>

void fac2(int);

void fac1(int n)
{
    printf("*");
    if (n > 0)
        fac2(n - 1);
}
void fac2(int n)
{
    printf("#");
    if (n > 0)
        fac2(--n);
}
int main()
{
    fac1(3);
}

// f1.3 ->* f2.2 -> *### 


#include <stdio.h>
void fun(int a)
{
    if (a > 1)
        fun(a - 1);
    printf("%d ", a);
}
int main()
{
    int q = 5;
    fun(q);
    printf("\n");
}

// f5 -> f4 ->


#include <stdio.h>
int f(int x)
{
    if (x < 2)
        return 1;
    return x * f(x - 1) + f(x - 2);
}
int main()
{
    int y;
    y = f(3);
    printf("%d\n", y);
}

// f3 -> 3*f2(2*f1+f0)+f1(1) -> 10


#include <stdio.h>
void fun(int n)
{
    if (n / 2)
        fun(n / 2);
    printf("%d", n % 2);
}
int main()
{
    fun(10);
    printf("\n");
}

// f10 -> f5 -> f2 -> f1 -> 


#include<stdio.h>

void fun(int *a, int i, int j)
{
    int t;
    if (i < j)
    {
        t = a[i];
        a[i] = a[j];
        a[j] = t;
        fun(a, ++i, --j);
    }
}
int main()
{
    int a[] = {1, 2, 3, 4, 5, 6}, i;
    fun(a, 0, 5);
    for (i = 0; i < 6; i++)
        printf("%d ", a[i]);
}

// 6 5 4 3 2 1


#include <stdio.h>
void f(int x[], int n)
{
    if (n > 1)
    {
        printf("%d,", x[0]);
        f(&x[1], n - 1);
        printf("%d,", x[0]);
    }
    else
        printf("%d,", x[0]);
}
int main()
{
    int z[3] = {4, 5, 6};
    f(z, 3);
    printf("\n");
}

// 4,5,6,5,4


#include <stdio.h>
void fun(char c)
{
    if (c > 'x')
        fun(c - 1);
    printf("%c", c);
}
int main()
{
    fun('z');
}

// xyz

#include <stdio.h>
int fun(int n)
{
    if (n == 1)
        return 1;
    else
        return (n + fun(n - 1));
}
int main()
{
    int x;
    scanf("%d", &x);
    x = fun(x);
    printf("%d\n", x);
}


// 10 -> f10 -> 10+f9(9+f8) ->  55


#include <stdio.h>
int f(int x)
{
    int y;
    if (x == 0 || x == 1)
        return (3);
    y = x * x - f(x - 2);
    return y;
}
int main()
{
    int z;
    z = f(3);
    printf("%d\n", z);
}

// f3 -> 9-f1(3)


#include<stdio.h>
int f(int n)
{
    if (n == 1)
        return 1;
    else
        return f(n - 1) + 1;
}
int main()
{
    int i, j = 0;
    for (i = 1; i < 3; i++)
        j += f(i);
    printf("%d\n", j);
}

// f1+f2(f1+1) -> 3


#include<stdio.h>

long fib(int n)
{
    if (n > 2)
        return (fib(n - 1) + fib(n - 2));
    else
        return (2);
}
int main()
{
    printf("%d\n", fib(3));
}

// f3 -> f2+f1 ->4


#include<stdio.h>

long fun(int n)
{
    long s;
    if (n == 1 || n == 2)
        s = 2;
    else
        s = n - fun(n - 1);
    return s;
}
int main()
{
    printf("%ld\n", fun(3));
}

// f3 -> 3-f2(2) ->1



#include <stdio.h>
void fun(int n, int *s)
{
    int f;
    if (n == 1)
        *s = n + 1;
    else
    {
        fun(n - 1, &f);
        *s = f;
    }
}
int main()
{
    int x = 0;
    fun(4, &x);
    printf("%d\n", x);
}

// 2


#include <stdio.h>
int b = 2;
int fun(int *k)
{
    b = *k + b;
    return (b);
}
int main()
{
    int a[10] = {1, 2, 3, 4, 5, 6, 7, 8}, i;
    for (i = 2; i < 4; i++)
    {
        b = fun(&a[i]) + b;
        printf("%d", b);
    }
    printf("\n");
}

//1028


